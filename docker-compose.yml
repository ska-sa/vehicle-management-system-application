version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: VehicleManagementSystemDB
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d VehicleManagementSystemDB" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend-data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/VehicleManagementSystemDB
      - BACKEND_CORS_ORIGINS=http://localhost:3000
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    command: npm run start -- --host 0.0.0.0
    depends_on:
      - backend
    networks:
      - app-network
    stdin_open: true
    tty: true

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  pgdata:
  pgadmin-data:
  backend-data:


networks:
  app-network:
    driver: bridge
